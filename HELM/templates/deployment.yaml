apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.nameSpace }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: my-pv
  namespace: {{ .Values.nameSpace }}
  labels:
    app: db
spec:
  storageClassName: manuel
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/postgres"

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.postgresName }}
  namespace: {{ .Values.nameSpace }}
spec:
  serviceName: {{ .Values.postgresName }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.postgresName }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgresName }}
    spec:
      volumes:
        - name: pv-storage
          persistentVolumeClaim:
            claimName: my-pvc
      containers:
      - name: postgresql
        image: "{{ .Values.imagePostgres.name }}:{{ .Values.imagePostgres.tag }}"
        ports:
        - containerPort: 5432
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: my-secret
                key: user
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: my-secret
                key: db
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: my-secret
                key: pwd
          - name: POSTGRES_HOST_AUTH_METHOD
            valueFrom:
              configMapKeyRef:
                name: my-configmap
                key: value
        volumeMounts:
          - mountPath: "/var/lib/postgresql/data"
            name: pv-storage

---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.fastapiName }}
  namespace: {{ .Values.nameSpace }}
  labels:
    app: {{ .Values.fastapiName }}
spec:
  replicas: 3
  selector:
    matchLabels:
      app: {{ .Values.fastapiName }}
  template:
    metadata:
      labels:
        app: {{ .Values.fastapiName }}
    spec:
      containers:
      - name: fastapi
        image: "{{ .Values.imageFastApi.name }}:{{ .Values.imageFastApi.tag }}"
        ports:
        - containerPort: 5000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.pgadminName }}
  namespace: {{ .Values.nameSpace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.pgadminName }}
  template:
    metadata:
      labels:
        app: {{ .Values.pgadminName }}
    spec:
      containers:
      - name: pgadmin
        image: {{ .Values.imagePgadmin.name }}
        ports:
        - containerPort: 8080
        env:
          - name: PGADMIN_DEFAULT_EMAIL
            valueFrom:
              configMapKeyRef:
                name: my-configmap
                key: email
          - name: PGADMIN_DEFAULT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: my-secret
                key: pgadminpwd
